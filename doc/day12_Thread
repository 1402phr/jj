#day12

스레드(Thread)
	자바가 프로그램을 실행하는 방법 
		1. Process를 이용 : 운영체제에 의해서 자신이 사용할 메모리를 할당받아
							레지스트리에 등록한 후 실행되는 방식
								단점 ) 각각의 프로세스 프로그램은 원칙적으로 자신의 데이터를 
								  	   다른 프로세스 프로그램에게 전달하지 못한다
								  	   (메모리끼리 서로 호환불가)
								  	   	> 현재까지 작성한 프로그램은 모두 프로세스방식
								  	   	  (main 함수로 시작되는건 프로세스 방식)
		2. Thread를 이용 : 독립적으로 메모리를 할당받지 못하고 실행되는 프로그램
						   대신 프로세스 프로그램이 사용하는 메모리를 공유한다
						    > 프로세스가 종료되면 스레드도 함께 종료됨
						    > 스레드는 혼자 실행되지못하고 반드시 다른 프로세스가 실행된 후에 실행되어야한다
						    	장점 ) 스레드 프로그램은 메모리를 함께 사용하므로 같은 메모리를 사용하는 
						    		   프로그램과 데이터 교환이 가능하다
	

용어정리
	1. 시분할 시스템 : cpu는 한 순간에 오직 하나의 프로그램만 실행할 수 있다
					   하지만 여러개의 프로그램이 동시에 실행되기를 원한다면
					   한 순간에는 한개의 프로그램만 실행하고, 적당한 시간이 지나면 해당 프로그램을 보류하고
					   다른 프로그램을 받아서 실행시킨다
					   결론적으로, 각 프로그램마다 cpu가 실행할 시간을 정한 후, 그 시간만큼만 실행해준다
	2. 우선순위(Ptiority) : cpu는 시분할 시스템에 의해서 특정 프로그램을 자신이 분배한 시간만큼 실행한다					    		   
						    분배한시간이 종료되면 다음 프로그램을 실행하게 된다
						    이때, cpu가 다음 프로그램을 선택하는 기준을 우선순위라고 한다		   
						    		   

자바에서 스레드를 만드는 방법
	> 방법이 2가지인 이유 : 단일상속만 가능한데 그러면 스레드랑 동시에 다른 기능 사용이 어려우니까 인터페이스로 만드는 방법도 있는 것
	
	1. Thread 클래스를 상속받아 만듦
		순서 )	
			1. Thread 클래스를 상속받아 클래스를 제작한다
			2. 그 안에 반드시 Run()이라는 함수를 오버라이드 해야한다
				> 이 함수가 프로세스 방식의 main()에 해당하는 것으로 스레드 프로그램의 시작함수가 된다
			3. run()함수부터 시작해서 그 프로그램이 하고자 하는 일을 코딩하면 된다
	2. Runnable 인터페이스를 구현하여 만드는 방법
		순서 )
			1.  Runnable 인터페이스를 구현하여 클래스를 만든다
			2. 그 클래스 안에 반드시 run()함수를 오버라이드 해야한다
				 > 이 함수가 프로세스 방식의 main()에 해당하는 것으로 스레드 프로그램의 시작함수가 된다
			3. run()함수부터 시작해서 그 프로그램이 하고자 하는 일을 코딩하면 된다
			
				참고 ) 1. Runnable 상태 : cpu가 시분할 시스템에 의해 프로그램을 선택할 때, 
										선택가능한 프로그램이 모여있느 상태(이중에서 우선순위에 따라 실행됨)
											> cpu는 Runnable 상태의 프로그램만 실행할 수 있다
					   2. New Born상태 => Runnable 상태로 전위시키는 명령 : start();
						
					   3. 실행함수가 run()이므로 직접 run()을 실행하면 이것은 스레드 동작이 아니고 
					   	  프로세스의 일반 함수를 호출하는 효과가 된다
					   	 
					   4. run상태 : cpu가 특정 프로그램을 실제로 실행하는 상태
					   				run 상태에는 오직 하난으 ㅣ프로그램만 들어갈 수 있다
					   				그리고 runnable => run상태로의 전위는 오직 운영체제만 가능하다
					   					> 개발자가 할 수 있는게 아님
					   					> run => runnable
					   						1. 운영체제가 전위시킴(시분할시스템에 의한 시간만료)
					   						2. 개발자 선택 가능
					   						
스레드 프로그램이 필요한 이유 	
	1. 독립적 실행이 필요한 경우
		예 ) 서버 프로그램에서는 각 클라이언트와 통신하는 프로그램이 독립적으로 실행되어야한다
			 즉, 클라이언트와 통신은 다른 작업과 별개로 독립실행될 필요가 있는것
	2. 백그라운드 작업이 필요한 경우
		예 ) 
			1. 그래픽처리를 할 때, 그림을 내부적으로 완성한 후, 
			   메인은 완성된 그림만 이용하고자 하는 경우
			2. 채팅 프로그램에서 파일을 전송받는 경우, 전송작업은 백그라운드에서 독립적으로 실행되어야한다
				> 카톡에서 용량이 큰 영상을 보내면서도 채팅은 계속 할 수 있다
			
			
스레드 프로그램을 동작시키는 방법
	1. 스레드 클래스를 상속받아 만든 경우
		순서 )
			1. new 시킴 > new born 상태로 전위
			2. run() > runnable 상태로 전위
	2. runnable 인터페이스 구현하여 만든 경우
		순서 )
			1. new 시킴 > 일반 클래스를 사용하기 위한 방법
			2. 스레드 클래스를 new 시키면서 1번 결과를 넣어준다
			3. 2의 결과를 이용하여 start상태가 된다
			
	참고 ) 하나의 스레드 프로그램은 여러번 실행될 수 있다
		   그러면 이들은 독립적으로 실행되는데
		   즉, 하나의 스레드처럼 여러 프로그램이 실행된다
		   
		   스레드에 부여된 이름은 String name = Thread.currenTthread().getName(); 으로 받아서 사용 가능
		   
		   
		   
Run > Runnable 전위 명령 : yield()

Blocked 상태 : 실행을 중단한 상태
			   이 상태의 프로그램은 절대 실행(run)되지 않는다

run > blocked
	 

						   
						   
						   
						   
						   
						   
						   